#!/usr/bin/env python
import sys
import re

def to_msec(value, unit):
    conversion = {'sec': 1000., 'msec': 1., 'usec': .001}
    return float(value) * conversion[unit]

records = dict()
testcases = set()
compilers = set()
for line in sys.stdin:
    match = re.match(r'(\w+)\s(\w+): \d+ loops, best of \d+: (\d+\.?\d*) (\w+) per loop', line.strip())
    if match:
        testcase, compiler, duration, units = match.groups()
    else:
        match = re.match(r'(\w+)\s(\w+): .*', line)
        assert match, line
        testcase, compiler = match.groups()
        duration, units = 0, 'msec'
    records.setdefault(compiler, dict())[testcase] = to_msec(duration, units)
    testcases.add(testcase)
    compilers.add(compiler)

compilers = sorted(compilers)
testcases = sorted(testcases)

table = [[''] + compilers]
for testcase in testcases:
    times = [records[compiler][testcase] for compiler in compilers]
    mtime = min([time for time in times if time] or [0.])
    ftimes = [(str(time) if time != mtime else '*{}*'.format(time)) for time in times]
    table.append([testcase] + ftimes)

cols = zip(*table)
col_widths = [max(len(value) for value in col) for col in cols]
format = ' '.join(['%%%ds' % width for width in col_widths ])
for row in table:
    print format % tuple(row)


